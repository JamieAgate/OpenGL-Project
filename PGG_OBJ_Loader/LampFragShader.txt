#version 430 core

// Input per-fragment data
// These must correspond to the varying outputs from the vertex shader
in vec3 vNormalV;
in vec3 eyeSpaceLightPosV;
in vec3 eyeSpaceVertPosV;
in vec2 texCoord;
in vec3 fragPos;
in vec3 worldNormal;

// Input uniform data - these have values that will be the same for every fragment
uniform vec3 lightColour = {1.0,1.0,1.0};
uniform vec3 emissiveColour = {0,0,0};
uniform vec3 ambientColour  = {1.0f,1.0f,1.0f};
uniform vec3 diffuseColour  = {1.0f,1.0f,1.0f};
uniform vec3 specularColour = {1.0f,1.0f,1.0f};
uniform float shininess     = 50.0f;
uniform float alpha         = 1.0f;
uniform vec3 worldLightPos;
uniform vec3 cameraPos;

// The output of the fragment shader is the fragment's colour
out vec4 fragColour;

// This is another input to allow us to access a texture
uniform sampler2D tex1;

void main()
{
	fragColour = vec4(1.0);
}